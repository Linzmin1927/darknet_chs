[net]
# Testing
batch=1
subdivisions=1
# Training
# batch=64
# subdivisions=2
width=416
height=416
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
burn_in=1000
max_batches = 50000
policy=steps
steps=40000,45000
scales=.1,.1

######################
#  backbone start
######################

#1 Conv/s2
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
# activation=relu
#output: 208*208*32

#2 Conv dw/s1
[convolutional]
batch_normalize=1
filters=32
groups=32
size=3
stride=1
pad=1
activation=relu
#output: 208*208*32

#3 Conv/s1
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=0
activation=relu
#output: 208*208*64

#4 Conv dw/s2
[convolutional]
batch_normalize=1
filters=64
groups=64
size=3
stride=2
pad=1
activation=relu
#output: 104*104*64

#5 Conv/s1
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=0
activation=relu
#output: 104*104*128

#6 Conv dw/s1
[convolutional]
batch_normalize=1
filters=128
groups=128
size=3
stride=1
pad=1
activation=relu
#output: 104*104*128

#7 Conv/s1
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=0
activation=relu
#output: 104*104*128


#8 Conv dw/s2
[convolutional]
batch_normalize=1
filters=128
groups=128
size=3
stride=2
pad=1
activation=relu
#output: 52*52*128

#9 Conv/s1
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=0
activation=relu
#output: 52*52*256

#10 Conv dw/s1
[convolutional]
batch_normalize=1
filters=256
groups=256
size=3
stride=1
pad=1
activation=relu
#output: 52*52*256

#11 Conv/s1
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=0
activation=relu
#output: 52*52*256

#12 Conv dw/s2
[convolutional]
batch_normalize=1
filters=256
groups=256
size=3
stride=2
pad=1
activation=relu
#output: 26*26*256

#13 Conv/s1
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=0
activation=relu
#output: 26*26*512

#14 Conv dw/s1
[convolutional]
batch_normalize=1
filters=512
groups=512
size=3
stride=1
pad=1
activation=relu
#output: 26*26*512


#15 Conv/s1
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=0
activation=relu
#output: 26*26*512


#16 Conv dw/s1
[convolutional]
batch_normalize=1
filters=512
groups=512
size=3
stride=1
pad=1
activation=relu
#output: 26*26*512

#17 Conv/s1
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=0
activation=relu
#output: 26*26*512


#18 Conv dw/s1
[convolutional]
batch_normalize=1
filters=512
groups=512
size=3
stride=1
pad=1
activation=relu
#output: 26*26*512


#19 Conv/s1
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=0
activation=relu
#output: 26*26*512


#20 Conv dw/s1
[convolutional]
batch_normalize=1
filters=512
groups=512
size=3
stride=1
pad=1
activation=relu
#output: 26*26*512

#21 Conv/s1
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=0
activation=relu
#output: 26*26*512


#22 Conv dw/s1
[convolutional]
batch_normalize=1
filters=512
groups=512
size=3
stride=1
pad=1
activation=relu
#output: 26*26*512

#23 Conv/s1
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=0
activation=relu
#output: 26*26*512

#24 Conv dw/s2
[convolutional]
batch_normalize=1
filters=512
groups=512
size=3
stride=2
pad=1
activation=relu
#output: 13*13*512

#25 Conv/s1
[convolutional]
batch_normalize=1
filters=1024
size=1
stride=1
pad=0
activation=relu
#output: 13*13*1024


#26 Conv dw/s1 #这一层论文里的结构图似乎不对，原文为S2，但是s2输出应该为7*7*1024？
[convolutional]
batch_normalize=1
filters=1024
groups=1024
size=3
stride=1
pad=1
activation=relu
#output: 13*13*1024

#27 Conv/s1
[convolutional]
batch_normalize=1
filters=1024
size=1
stride=1
pad=0
activation=relu
#output: 13*13*1024


######################
#  backbone end
######################

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=255
activation=linear



[yolo]
mask = 3,4,5
anchors = 10,14,  23,27,  37,58,  81,82,  135,169,  344,319
classes=80
num=6
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1

[route]
layers = -4

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[upsample]
stride=2

[route]
layers = -1, 11

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=255
activation=linear

[yolo]
mask = 0,1,2
anchors = 10,14,  23,27,  37,58,  81,82,  135,169,  344,319
classes=80
num=6
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1
